# This is Git's per-user configuration file.
[user]
# Please adapt and uncomment the following lines:
#	name = Crow
#	email = mcu@mcimac.ornl.gov
[user]
	name = Crow, Michael C
	email = crowmc@ornl.gov
[alias]
    ####################
    #### log stuff #####
    ####################
	lgd = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --date=relative --branches
	l2 = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --date=relative --branches --tags
	lgdw = whatchanged --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --date=relative --branches

    filemodified = log -1
    filemod = log -1
    fm = log -1
    newest = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
    lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all

    ######(old)#########
    ### show aliases ###
    ####################
	my-aliases = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
	aliases = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
	show-aliases = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /

    ####################
    ###### diffs #######
    ####################
    df = diff
    dfn = diff --name-only
    diffn = diff --name-only
    dfe = diff -- . ':(exclude).idea/'
    dfj = "!f() { \
        if [[ $1 = *".jsp"* ]]; \
        then git diff src/main/webapp/WEB-INF/pages/$1; \
        else git diff $1; \
        fi; }; f"
    dj = diff "src/main/webapp/WEB-INF/pages"

    ####################
    # simple shortcuts #
    ####################
	co = checkout
    br = branch
    st = status -suno

    ####################
    ###### handy #######
    ####################
    assume-unchanged = update-index --assume-unchanged
    undocommit = reset --soft HEAD~ #Only undoes the commit - does not affect the files.

    renameremote = remote set-url origin 
    commitedfiles = diff-tree --no-commit-id --name-only -r

    showtags = tag -n9

    ####################
    #### pre-commit ####
    ####################
    #mcc = "!git status && echo 'Lets see if it works\nNext line' && echo '---------------' && git status"

    # Show from previous commit.
    # git show REVISION:path/to/file
    #
    # Rename Remote URL.
    # git remote set-url origin https://github.com/USERNAME/REPOSITORY.git
[merge "local_applicationContext"]
	driver = true
[merge "local_applicationContext2"]
	driver = true
[core]
	excludesfile = /Users/mcu/.gitignore_global
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
