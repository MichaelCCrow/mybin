# This is Git's per-user configuration file.
[user]
# Please adapt and uncomment the following lines:
#	name = Crow
#	email = mcu@mcimac.ornl.gov
[user]
	name = Crow, Michael C
	email = crowmc@ornl.gov
[alias]
    ####################
    #### log stuff #####
    ####################
	lgd = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --date=relative --branches
    #l2 = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --date=relative --branches --tags
	lgdw = whatchanged --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --date=relative --branches
    lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all

    
    ##############################
    #### show branch history #####
    ##############################
    sb = show-branch
    showbranch = show-branch
    showbranches = ! git show-branch --color=always | less -R


    ####################
    ### file history ###
    ####################
    filemodified = log -1
    fm = log -1
    fileadded = log --diff-filter=A --
    
    # all changes to a file
    filechanged = log --oneline --graph --follow --
    fc = log --oneline --graph --follow --
    fcd = log --graph --follow --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --date=relative --branches --
    filechanges = log --follow -p --
    follow = log --follow -p --

    
    ########################################
    #### show modified files in a commit ###
    ########################################
    showmodified = diff-tree --no-commit-id --name-only -r
    showmo = diff-tree --no-commit-id --name-only -r
    shomo = diff-tree --no-commit-id --name-only -r

    # get the last commit hash
    lastcommit = "!git rev-parse HEAD | cut -c 1-8"

    # using the alias 'lgd', count the total number of commits in history
    totalcommits = "!git lgd | grep '*' | wc -l | tr -d ' '"
    countcommits = "!git lgd | grep '*' | wc -l | tr -d ' '"

    # history of the newest branches, newest last
    newest = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

    ####################
    ### show aliases ###
    ####################
    my-aliases   = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ / | grep --color=always -E '^\\S+\\b'
    #aliases     = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
    aliases     = ! git config --get-regexp alias | grep --color=always -E '^\\S+\\b'
    showaliases = ! git config --get-regexp alias | grep --color=always -E '^\\S+\\b'
	show-aliases = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
    la = "!git config -l | grep alias | cut -c 7- | grep --color=always '^\\w*='"
    #^.*\?="

    ####################
    ###### diffs #######
    ####################
    df = diff
    dfn = diff --name-only
    dfe = diff -- . ':(exclude).idea/'
    dfj = "!f() { \
        if [[ $1 = *".jsp"* ]]; \
        then git diff src/main/webapp/WEB-INF/pages/$1; \
        else git diff $1; \
        fi; }; f"
    dj = diff "src/main/webapp/WEB-INF/pages"

    dfnapp  = diff --name-only app/
    dfnjava = diff --name-only src/main/java/
    dfnres  = diff --name-only src/main/resources/

    dfapp = diff app/
    dfjava = diff src/main/java/
    dfres = diff src/main/resources/

    ####################
    # simple shortcuts #
    ####################
	co = checkout
    br = branch -a
    st = status -suno

    c = "!f() { vi ~/.gitconfig; }; f"

    ####################
    ###### handy #######
    ####################
    assume-unchanged = update-index --assume-unchanged
    undocommit = reset --soft HEAD~ #Only undoes the commit - does not affect the files.

    renameremote = remote set-url origin 
    committedfiles = diff-tree --no-commit-id --name-only -r
    changes = "!git diff-tree --name-status -r $(git lastcommit)"

    showtags = tag -n9

    branches = branch -a
    brancha  = branch -a
    cob = checkout -b

    ####################
    #### pre-commit ####
    ####################
    #mcc = "!git status && echo 'Lets see if it works\nNext line' && echo '---------------' && git status"

    # Show from previous commit.
    # git show REVISION:path/to/file
    #
    # Rename Remote URL.
    # git remote set-url origin https://github.com/USERNAME/REPOSITORY.git
[merge "local_applicationContext"]
	driver = true
[merge "local_applicationContext2"]
	driver = true
[core]
	excludesfile = /Users/mcu/.gitignore_global
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
