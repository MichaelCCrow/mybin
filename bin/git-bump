#!/bin/bash

#ABOUT:
# Custom version bumping script. 
# Bumps maven project version.
# Adds modified git files to CHANGELOG.txt.
# Uses python package 'bumpversion'.
# Requires a '.bumpversion.cfg' file in the project root directory containing:
# [bumpversion]
# current_version = <current.project.version>
# 
# Accepts one arg: [major|minor|patch]
#:ABOUT

incr=""

if [[ $# != 1 || ! -f .bumpversion.cfg ]]
then 
    echo
    echo "##########################################################"
    echo "usage: $0 [major|minor|patch]"
    echo "##########################################################"
    echo
    about $0
    #echo "(Uses python package 'bumpversion')"
    #bumpversion
    echo
    #exit

    echo "Interactive mode? [Y/n] "
    read -t 5 answer
    if [[ $answer =~ ^[Yy]$ || $answer =~ [yes] ]]
    then

        echo "Version amount:"
        makemenu.sh "cancel" "patch" "minor" "major"
        choice=$(cat /tmp/menuselect.val)
        [ $choice = "cancel" ] && exit
        echo "-- git bump $choice --"
        incr=$choice
        echo
        echo "-----------------------------------------"
        git status -suno
        echo "-----------------------------------------"
        else exit
    fi
else incr=$1
fi

[ $incr = "" ] && exit 1

### Verify bumpversion is installed ###
if [ ! `which bumpversion` ]
then
    echo "Cannot find bumpversion"
    echo "Attempting to install..."

    python3 -m pip install bumpversion

    if [ `which bumpversion` ]
    then echo "Successfully installed bumpversion" && which bumpversion
    else echo "Failed to install bumpversion. It is required for 'git bump' to function properly."
         exit 1
    fi
fi

! which -s bumpversion && exit 1

curver=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
newver=$(grep current_version .bumpversion.cfg | cut -d '=' -f2 | tr -d ' ')

echo "current maven version: $curver"
echo "current bumpversion version: $newver"

bumpversion --allow-dirty $1

newver=$(grep current_version .bumpversion.cfg | cut -d '=' -f2 | tr -d ' ')

echo "new bumped version: $newver"
echo

mvn versions:set -DnewVersion="$newver-SNAPSHOT"

curver=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
echo "new version in maven: $curver"
echo "new version in bumpversion.cfg: $newver"

echo >> CHANGELOG.txt
echo "-------------version: $newver-------------------" >> CHANGELOG.txt
date >> CHANGELOG.txt
git status -uno -s >> CHANGELOG.txt
echo "------------------------------------------------" >> CHANGELOG.txt
