#!/bin/bash

iscmd=false

sub_help() {
    echo
    echo "Usage: `basename $0` <message|subcommand|[-option]>\n"
    echo "Subcommands:"
    echo "    clear   Deletes file '.mygitnotes' to clear notes"
    echo "    show    Print all notes in '.mygitnotes'."
    echo "    undo    Remove and print last note in '.mygitnotes'."
    echo "    last    Show last note in '.mygitnotes'."
    echo
    echo "Options:"
    echo "    -m      Open notes for editing in 'mygitnotes'."
    echo "Must be in the root directory of the git repo."
    exit
}

if [ ! -d .git ]
then 
    echo "Must be in the root directory of the git repo." 
    sub_help
    exit
fi 

sub_clear() {
    read -p "Are you sure? [Yy]" -n 1 -r
    echo    
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        rm -v .mygitnotes
    fi
}

sub_show() {
    #sed -i '' -e '$ d' .mygitnotes
    if [ ! -f .mygitnotes ]
    then 
        echo "No notes yet"
        exit
    else cat .mygitnotes
    fi
}

sub_last() {
    #sed -i '' -e '$ d' .mygitnotes
    #echo "Last note:"
    tail -1 .mygitnotes
}

sub_undo() {
    echo "Removing last note:"
    tail -1 .mygitnotes
    sed -i '' -e '$ d' .mygitnotes
}

sub_msg() {
    sub_show | tr '\n' '-' | sed -e 's/-/ - /g'
}

sub_add() {
if [[ $# = 0 ]]
then 
    #echo "Current notes:"
    cat .mygitnotes
    sub_help
    return 1
else
    #case $1 in "show" | "help" | "clear" | "-h" | "--help" | "-m") return 1 ;; esac
    if [ ! -f .mygitnotes ]
    then
        echo "Creating new notes for: "
        git branch | grep '*'
        git rev-parse HEAD
        #echo "$(git branch | grep '*')" > .mygitnotes
        #echo $(git rev-parse HEAD) >> .mygitnotes
        #echo "-">> .mygitnotes
    fi
    echo $@ >> .mygitnotes
    #case $1 in "undo") 
    #    sed -i '' -e '$ d' .mygitnotes ;;
    #esac
    return 0
fi
}

#if ! checkinput $1; then exit; fi

subcommand=$1
case $subcommand in
    "" | "-h" | "--help")
        sub_help
        ;;
    "-m")
        vi .mygitnotes
        ;;
    *)
        instring=$(echo $1 | wc -w | tr -d ' ')
        #if [[ "$#" -ne "`echo $1 | wc -w | tr -d ' '`" ]]
        if [[ "$#" -ne "$instring" ]]
        then 
            sub_add $1
            exit 0
            #echo "not equal, must be string"; echo $#; echo $1 | wc -w | tr -d ' '
        else #echo "they equal"; echo $#; echo $1 | wc -w | tr -d ' '

        shift
        sub_${subcommand} $@

        #if $iscmd; then sed -i '' -e '$ d' .mygitnotes; fi

        if [ $? = 127 ]; then
            echo "Error: '$subcommand' is not a known subcommand." >&2
            echo "       Run '$ProgName --help' for a list of known subcommands." >&2
            exit 1
        fi

        fi
        ;;

esac

