#!/bin/bash

sub_help() {
    echo
    echo "Usage: `basename $0` <message|subcommand|[-option]>\n"
    echo "Subcommands:"
    echo "    clear   Deletes file '.mygitnotes' to clear notes"
    echo "    show    Print all notes in '.mygitnotes'."
    echo
    echo "Options:"
    echo "    -m      Open notes for editing in 'mygitnotes'."
    echo "Must be in the root directory of the git repo."
    exit
}

if [ ! -d .git ]
then 
    echo "Must be in the root directory of the git repo." 
    sub_help
    exit
fi 

sub_clear() {
    read -p "Are you sure? [Yy]" -n 1 -r
    echo    
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        rm -v .mygitnotes
    fi
}

sub_show() {
    cat .mygitnotes
}

if [ $# != 1 ]
then cat .mygitnotes
else
    case $1 in "show" | "help" | "clear") return ;
    esac
    echo "here so it did not continue"

    #if [ ! -f .mygitnotes ]
    #then
    #    echo "Creating new notes for `git branch && git rev-parse HEAD`"
    #    `git branch && git rev-parse HEAD` > .mygitnotes
    #fi
    #echo $1 >> .mygitnotes
fi

subcommand=$1
case $subcommand in
    "" | "-h" | "--help")
        sub_help
        ;;
    "-m")
        vi .mygitnotes
        ;;
    *)
        shift
        sub_${subcommand} $@
        if [ $? = 127 ]; then
            echo "Error: '$subcommand' is not a known subcommand." >&2
            echo "       Run '$ProgName --help' for a list of known subcommands." >&2
            exit 1
        fi
        ;;
esac

