#!/bin/bash

ProgName=$(basename $0)

sub_help(){
    echo "Usage: $ProgName <subcommand> [options]\n"
    echo "Subcommands:"
    echo "    list      Lists latest files in draft, submitted, accepted, and approved"
    echo "    get       Get file with associated record id"
    echo "    show      Prints the full path to the record with the associated record id"
    echo "    listrids  Greps for record id regex on filenames"
    echo "    findtag   Greps for xml tag in approved record"
    echo "    baz       Run baz"
    echo ""
    echo "For help with each subcommand run:"
    echo "$ProgName <subcommand> -h|--help"
    echo ""
}

_find_record() {
    ls -t `find /metadata/ngee/{draft,submitted,accepted,approved}/* -type f \
        | grep "NGA" \
        | grep -e 'xml.' -v` \
        | grep $1 \
        | head -1
}

sub_baz(){
    echo "Running 'baz' command."
    echo "First arg is '$1'."
    echo "Second arg is '$2'."
}

sub_list() {
    num=5
    #verby=false
    if [ $# = 1 ]; then 
        case $1 in 
          "-h" | "--help")
            echo "Lists latest files in draft, submitted, accepted, and approved. Accepts optional parameter for how many to return."
            exit;;
          #"-v") 
          #    shift
          #    verby=true
          #    ;;
        esac
        num=$1
    fi
    #if [ verby = true ]; then echo " --- Latest $num Files --- "; fi
    #echo " --- Latest $num Files --- "
    ls -t `find /metadata/ngee/{draft,submitted,accepted,approved}/* -type f \
        | grep "NGA" \
        | grep -e 'xml.' -v` \
        | cut -d '/' -f 4- \
        | head -$num
}

sub_show() {
    if [[ $# < 1 ]]; then
        sub_help
        exit 1
    fi
    case $1 in "-h" | "--help")
        echo "Prints the full path to the record with the associated record id"
        exit
    esac
    echo `_find_record $1`
}

sub_get() {
    if [[ $# < 1 ]]; then
        sub_help
        exit 1
    fi
    case $1 in "-h" | "--help")
        echo "Open the file with associated record id using vi"
        exit
    esac
    vi `_find_record $1`
}

sub_listrids() {
    ls /metadata/ngee/approved | grep --color=always -E "[a-zA-Z]{3}\d{3}"
}

sub_findtag() {
    if [[ $# < 1 ]]; then
        sub_help
        exit 1
    fi
    grep -r --color=always "<$1>" /metadata/ngee/approved
}



subcommand=$1
case $subcommand in
    "" | "-h" | "--help")
        sub_help
        ;;

    *)  shift
        sub_${subcommand} $@
        if [ $? = 127 ]; then
            echo "Error: '$subcommand' is not a known subcommand." >&2
            echo "       Run '$ProgName --help' for a list of known subcommands." >&2
            exit 1
        fi
        ;;
esac
